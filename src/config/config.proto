syntax = "proto2";

package riner.proto;

//option optimize_for = LITE_RUNTIME; //generate code that only depends on the protobuf-lite library with a subset of features.

message Config {
    required string version = 1;

    optional GlobalSettings global_settings = 2;
    repeated DeviceAlias device_alias = 3; //usually empty, DeviceAliases are a workaround if your GPUs don't get recognized properly.
    repeated Profile profile = 4;
    repeated DeviceProfile device_profile = 5;
    repeated Pool pool = 6;

    message GlobalSettings {
        optional uint32 api_port             = 5;
        optional string opencl_kernel_dir    = 6;

        optional string start_profile_name   = 7; //must correspond to "name" field of an existing Profile that should be used as the first one when starting the application
    }

    message DeviceAlias {
        optional string name = 1;

        optional uint64 index_opencl = 2;
        optional uint64 index_vulkan = 3;
        optional uint64 index_cuda   = 4;

        optional string pcie_id = 5;
        optional bool is_cpu    = 6 [default = false];
    }

    message Profile {
        optional string name = 1;

        repeated Task task = 2; //all of these tasks run simultaneously as this profile is started, and are terminated as the profile is terminated

        message Task {

            oneof device_name { //the device on which the task should be run
                uint64 device_index = 1; //gpu index, arbitrarily chosen, order of gpus is printed at application startup.
                string device_alias_name = 2; //name of a device alias specified in device_aliases
                bool run_on_all_remaining_devices = 3; //set to true if this task should run on all devices that have no task assigned to them in any other way. if set to false it is ignored (protobuf doesn't seem to have a unit type, so i chose bool)
            }

            optional string use_device_profile_with_name = 4;
            optional string run_algoimpl_with_name       = 5;
        }

    }

    message DeviceProfile {
        optional string name = 1; //name of the deviceprofile. referenced in Profile task

        map<string, AlgoSettings> settings_for_algoimpl = 2; //string key is the name of the AlgoImpl e.g. "AlgoEthashCL" for which the provided AlgoSettings should be used.

        message AlgoSettings {
            optional uint32 core_clock_MHz = 3;
            optional uint32 memory_clock_MHz = 4;
            optional uint32 core_voltage_mV = 5;
            optional int32 core_voltage_offset_mV = 6;

            oneof power_limit {
                uint32 power_limit_W = 7;
                uint32 power_limit_percent = 8;
            }

            optional uint32 num_threads = 9;
            optional uint32 work_size = 10;
            optional uint32 raw_intensity = 11;
        }

    }

    message Pool {
        required string pow_type = 1;
        optional string protocol = 2 [default = ""];
        required string host = 3;
        required uint32 port = 4;
        required string username = 5;
        optional string password = 6 [default = ""];
        optional bool enable_ssl = 7 [default = false];
        optional string certificate_file = 8;
    }

}
